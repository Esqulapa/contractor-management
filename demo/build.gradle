plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
	id("org.flywaydb.flyway") version "7.14.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.1.4'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server', version: '3.2.0'
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.19.2'
	implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: '6.1.4'

	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'
	testCompileOnly 'org.projectlombok:lombok:1.18.28'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'



	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.1'

}

flyway {
	url = 'jdbc:postgresql://localhost:5332/JAREK'
	user = 'postgres'
	password = 'Antekantek'
	schemas = ['contractor_management']
	defaultSchema = 'contractor_management'
}

tasks.named('test') {
	useJUnitPlatform()
}
